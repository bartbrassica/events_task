from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '9483e35f9715'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text('CREATE SEQUENCE user_id_seq'))
    op.execute(sa.text('CREATE SEQUENCE events_id_seq'))
    op.execute(sa.text('CREATE SEQUENCE participants_id_seq'))
    op.execute(sa.text('CREATE SEQUENCE event_participants_id_seq'))

    op.create_table('events',
        sa.Column('id', sa.Integer(), sa.Sequence('events_id_seq'), nullable=False),
        sa.Column('name', sa.Unicode(length=255), nullable=False),
        sa.Column('description', sa.UnicodeText(), nullable=True),
        sa.Column('date', sa.DateTime(), nullable=False),
        sa.Column('duration', sa.Integer(), nullable=False),
        sa.Column('location', sa.Unicode(length=255), nullable=False),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('creation_date', sa.DateTime(), nullable=False),
        sa.Column('updated_by', sa.Integer(), nullable=True),
        sa.Column('update_date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participants',
        sa.Column('id', sa.Integer(), sa.Sequence('participants_id_seq'), nullable=False),
        sa.Column('first_name', sa.Unicode(length=100), nullable=False),
        sa.Column('last_name', sa.Unicode(length=100), nullable=False),
        sa.Column('email', sa.Unicode(length=255), nullable=False),
        sa.Column('is_vegetarian', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table('users',
        sa.Column('id', sa.Integer(), sa.Sequence('user_id_seq'), nullable=False),
        sa.Column('username', sa.Unicode(length=100), nullable=False),
        sa.Column('email', sa.Unicode(length=100), nullable=False),
        sa.Column('first_name', sa.Unicode(length=100), nullable=False),
        sa.Column('last_name', sa.Unicode(length=100), nullable=False),
        sa.Column('password_hash', sa.Unicode(length=255), nullable=False),
        sa.Column('active', sa.Boolean(), nullable=False),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('creation_date', sa.DateTime(), nullable=False),
        sa.Column('updated_by', sa.Integer(), nullable=True),
        sa.Column('update_date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username')
    )
    op.create_table('event_participants',
        sa.Column('id', sa.Integer(), sa.Sequence('event_participants_id_seq'), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('days_in_event', sa.Integer(), nullable=False),
        sa.Column('is_event_organizer', sa.Boolean(), nullable=False),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('creation_date', sa.DateTime(), nullable=False),
        sa.Column('updated_by', sa.Integer(), nullable=True),
        sa.Column('update_date', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_participants')
    op.drop_table('users')
    op.drop_table('participants')
    op.drop_table('events')

    op.execute(sa.text('DROP SEQUENCE user_id_seq'))
    op.execute(sa.text('DROP SEQUENCE events_id_seq'))
    op.execute(sa.text('DROP SEQUENCE participants_id_seq'))
    op.execute(sa.text('DROP SEQUENCE event_participants_id_seq'))
    # ### end Alembic commands ###
